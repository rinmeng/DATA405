getwd()
boxplot(rivers)
rivers
iris
summary(iris)
boxplot(iris$Sepal.Length)
iris$Sepal.Length
head(iris)
summary(iris)
boxplot(Sepal.Length, data = "iris")
boxplot(iris$Sepal.Length, data = Iris)
boxplot(iris$Sepal.Length, data = iris)
boxplot(Sepal.Length, data = iris)
boxplot(Sepal.Length ~ Species, data = iris)
women
boxplot(height ~ weight, data = women)
boxplot(weight ~ height, data = women)
boxplot(weight ~ height, data = women)
boxplot(Sepal.Length ~ Species, data = iris)
boxplot(Sepal.Length ~ Species, data = iris, ylab = "Spela length (cm)", main = "Iris measurements", boxwex = 0.5)
boxplot(Sepal.Length ~ Species, data = iris)
boxplot(Sepal.Length ~ Species, data = iris, ylab = "Spela length (cm)", main = "Iris measurements", boxwex = 0.5)
boxplot(Sepal.Length ~ Species, data = iris)
boxplot(Sepal.Length ~ Species, data = iris, ylab = "Spela length (cm)", main = "Iris measurements", boxwex = 0.5)
orange
Orange
as.character(Orange$Tree)
factor(Orange$Tree)
levels(factor(Orange$Tree))
as.character(Orange$Tree)
plot(circumference ~ age, data= Orange, pch = as.numeric(Orange$Tree))
for (i in Orange$Tree){
lines(circumference ~ age, data= Orange, pch = as.numeric(Orange$Tree))
}
#Question 5
returns1 = diff(EuStockMarkets)
#Question 5
returns1 = diff(EuStockMarkets)
hist(returns1)
hist(returns1, breaks = "scott")
hist(returns1, breaks = "fd")
hist(returns1, breaks = "scott")
hist(returns1, breaks = "fd")
#Question 5
returns1 = diff(EuStockMarkets)
hist(returns1,breaks = "scott")
hist(returns1,breaks = "fd")
#Question 5
returns1 = diff(EuStockMarkets)
hist(returns1)
hist(returns1, breaks = "scott")
hist(returns1, breaks = "fd")
x1 = 1.8
x2 = 9.1
y = 0.1
y.lm (y~x1+x2)
coef(y.lm)
x1 = 1.8
x2 = 9.1
y = 0.1
y.lm = (y~x1+x2)
coef(y.lm)
rWH <- function(n, seed) {
ix <- (171*seed)%%30269
numbers <- numeric(n)
for (i in 1:n) {
ix <- (171*ix)%%30269
numbers[i] <- ix/30269.0
}
numbers
}
rWH(3, 333)
sqrtNA <- function(x) {
if (min(x) < 0) {
message("Error: At least one element of your input is negative.") }
else { sqrt(x)
}
}
sqrtNA(-2)
sqrtNA(2)
rWH <- function(n, seed) {
ix <- (171*seed)%%30269
numbers <- numeric(n)
for (i in 1:n) {
ix <- (171*ix)%%30269
numbers[i] <- ix/30269.0
}
numbers
}
rWH(3, 333)
return ((1+ (361*x_k1)) %% mod)
x_k <- function(x_k1, mod){
return ((1+ (361*x_k1)) %% mod)
}
x_k <- function(x_k1, mod){
return ((1+ (361*x_k1)) %% mod)
}
u_k <- function(xk, mod) {
return (xk / mod)
}
x_k(119,131072)
x_k(119,131072)
x_k <- function(x_k1, mod){
val <- ((1+ (361*x_k1)) %% mod)
print("x_k = ",(1+ (361*x_k1)) %% mod), "u_k = ", u_k(((1+ (361*x_k1)) %% mod),mod) )
u_k <- function(xk, mod) {
return (xk / mod)
}
x_k(119,131072)
val <- ((1+ (361*x_k1)) %% mod)
print("x_k = " + (1+ (361*x_k1)) %% mod), "u_k = " + u_k( ((1+ (361*x_k1)) %% mod) , mod)
x_k <- function(x_k1, mod){
val <- ((1+ (361*x_k1)) %% mod)
print("x_k = " + (1+ (361*x_k1)) %% mod), "u_k = " + u_k( ((1+ (361*x_k1)) %% mod) , mod)
u_k <- function(xk, mod) {
return (xk / mod)
}
x_k(119,131072)
x_k <- function(x_k1, mod){
val <- ((1+ (361*x_k1)) %% mod)
print("x_k = " + (1+ (361*x_k1)) %% mod) +  "u_k = " + u_k( ((1+ (361*x_k1)) %% mod) , mod)
}
u_k <- function(xk, mod) {
return (xk / mod)
}
x_k(119,131072)
x_k <- function(x_k1, mod){
val <- ((1 + (361 * x_k1)) %% mod)
print(paste("x_k =", val, "u_k =", u_k(val, mod)))
}
u_k <- function(xk, mod) {
return (xk / mod)
}
x_k(119, 131072)
x_k(42960, 131072)
x_k(117, 131072, 360)
x_k <- function(x_k1, mod, a){
val <- ((1 + (a * x_k1)) %% mod)
print(paste("x_k =", val, "u_k =", u_k(val, mod)))
}
u_k <- function(xk, mod) {
return (xk / mod)
}
x_k(117, 131072, 360)
x_k(42121, 131072,360)
x <- numeric(2)
x
n <- 2
CDF <- c(.6, .6, .9, 1)
U <- runif(1)
U
U <- runif(1)
U <- runif(1)
U
n <- 2
CDF <- c(.6, .6, .9, 1)
U <- 0.35
X <- numeric(n)
for (x in 0:2) {
X[U > CDF[x+1]] <- x + 1
}
X
n <- 2
CDF <- c(.6, .6, .9, 1)
U <- 0.35
X <- numeric(n)
for (x in 0:2) {
X[U > CDF[x+1]] <- x + 1
}
X
x_k(127, 2^(2^5-1)-1 ,1000000001)
x_k(119, 131072, 361)
x_k(119, 131072, 361)
x_k(119, 131072, 361)
x_k(42960, 131072,361)
x_k(117, 131074, 360)
x_k(42121, 131074,360)
x_k(119, 131072, 361)
clear
x_k(119, 131072, 361)
x_k(42960, 131072,361)
x_k(119, 131072, 361)
x_k(42960, 131072,361)
x_k(117, 131071, 360)
x_k(42960, 131071,360)
n <- 2
CDF <- c(.6, .6, .9, 1)
U <- 0.35
X <- numeric(n)
for (x in 0:2) {
X[U > CDF[x+1]] <- x + 1
}
X
x_k(127, 2^(2^5-1)-1 ,1000000001)
x_k(117, 131071, 360)
x_k(42121, 131071,360)
x_k(117, 131071, 360)
x_k(42121, 131071,360)
x_k(117, 131071, 360)
x_k(42121, 131071,360)
x_k(117, 131072, 361)
x_k(42238, 131072,361)
u_j <- runif(n, -1, 1)
u_j(12)
u_j <- runif(n, -1, 1)
u_j(12)
n=12
u_j <- runif(n, -1, 1)
(12)
(12)
u_j
n=12
uj <- runif(n, -1, 1)
uj.12 <- sum(uj)
uj.12
uj <- c(uj) + runif(n,-1,1)
uj
n=12
uj <- runif(n, -1, 1)
uj <- c(uj,runif(n,-1,1))
uj
n=12
uj <- runif(n, -1, 1)
uj
uj.112 <- sum(uj)
uj <- c(uj,runif(n,-1,1))
uj.1324
uj
n=12
uj <- runif(n, -1, 1)
uj
uj.112 <- sum(uj)
uj <- c(uj,runif(n,-1,1))
uj
uj.1324 = 0
for(i in 13:24){
uj.1324 = uj.1324 + uj[i]
}
uj
uj.112
uj.1324
X <- uj.112 + uj.1324
X
n=12
uj <- runif(n, -1, 1)
uj
uj.112 <- sum(uj)
uj <- c(uj,runif(n,-1,1))
uj
uj.1324 = 0
for(i in 13:24){
uj.1324 = uj.1324 + uj[i]
}
uj.112
uj.1324
X <- uj.112 + uj.1324
X
n=12
uj <- runif(n, -1, 1)
uj
uj.112 <- sum(uj)
uj <- c(uj,runif(n,-1,1))
uj
uj.1324 = 0
for(i in 13:24){
uj.1324 = uj.1324 + uj[i]
}
uj.112
uj.1324
X <- uj.112 + uj.1324
X
n=12
uj <- runif(n, -1, 1)
uj
uj.112 <- sum(uj)
uj <- c(uj,runif(n,-1,1))
uj
uj.1324 = 0
for(i in 13:24){
uj.1324 = uj.1324 + uj[i]
}
uj.112
uj.1324
X <- uj.112 + uj.1324
X
n=12
uj <- runif(n, -1, 1)
uj
uj.112 <- sum(uj)
uj <- c(uj,runif(n,-1,1))
uj
uj.1324 = 0
for(i in 13:24){
uj.1324 = uj.1324 + uj[i]
}
uj.112
uj.1324
X <- uj.112 + uj.1324
X
n=12
uj <- runif(n, -1, 1)
uj
uj.112 <- sum(uj)
uj <- c(uj,runif(n,-1,1))
uj
uj.1324 = 0
for(i in 13:24){
uj.1324 = uj.1324 + uj[i]
}
uj.112
uj.1324
X <- uj.112 + uj.1324
X
n=12
uj <- runif(n, -1, 1)
uj
uj.112 <- sum(uj)
uj <- c(uj,runif(n,-1,1))
uj
uj.1324 = 0
for(i in 13:24){
uj.1324 = uj.1324 + uj[i]
}
uj.112
uj.1324
X <- uj.112 + uj.1324
vect.X <- c()
for (i in 1:100){
n=12
uj <- runif(n, -1, 1)
uj.112 <- sum(uj)
uj <- c(uj,runif(n,-1,1))
uj.1324 = 0
for(i in 13:24){
uj.1324 = uj.1324 + uj[i]
}
X <- uj.112 + uj.1324
vect.X <- c(vect.X, X)
}
vect.X
summary(vect.X)
for (i in 1:100){
n=12
uj <- runif(n, -1, 1)
uj.112 <- sum(uj)
uj <- c(uj,runif(n,-1,1))
uj.1324 = 0
for(i in 13:24){
uj.1324 = uj.1324 + uj[i]
}
X <- uj.112 + uj.1324
vect.X <- c(vect.X, X)
}
vect.X
summary(vect.X)
for (i in 1:100){
n=12
uj <- runif(n, -1, 1)
uj.112 <- sum(uj)
uj <- c(uj,runif(n,-1,1))
uj.1324 = 0
for(i in 13:24){
uj.1324 = uj.1324 + uj[i]
}
X <- uj.112 + uj.1324
vect.X <- c(vect.X, X)
}
summary(vect.X)
for (i in 1:100){
n=12
uj <- runif(n, -1, 1)
uj.112 <- sum(uj)
uj <- c(uj,runif(n,-1,1))
uj.1324 = 0
for(i in 13:24){
uj.1324 = uj.1324 + uj[i]
}
X <- uj.112^2 + uj.1324^2
vect.X <- c(vect.X, X)
}
summary(vect.X)
for (i in 1:100){
n=12
uj <- runif(n, -1, 1)
uj.112 <- sum(uj)
uj <- c(uj,runif(n,-1,1))
uj.1324 = 0
for(i in 13:24){
uj.1324 = uj.1324 + uj[i]
}
X <- uj.112^2 + uj.1324^2
vect.X <- c(vect.X, X)
}
summary(vect.X)
badrandom <- function (n,a,b,m){
return (a+(b*28))%% (2^m) - 1)
badrandom(2,4,17,6)
badrandom <- function (n,a,b,m){
return (a+(b*28))%% (2^m) - 1)
badrandom <- function (n,a,b,m){
return ((a+(b*28)) %% ((2^m) - 1))
}
badrandom(2,4,17,6)
badrandom <- function (n,a,b,m){
val = ((a+(b*28)) %% ((2^m) - 1))
u_k = val / 2^m
print(paste("x_k =", val, "u_k =", u_k))
}
badrandom(2,4,17,6)
x_k(28,4,17,6)
x_k <- function(x_k1, a,b,m){
val <- ( (a + (b * x_k1)) %% (2^m-1))
print(paste("x_k =", val, "u_k =", u_k(val, m)))
}
u_k <- function(xk, mod) {
return (xk / mod)
}
x_k(28,4,17,6)
x_k(39,4,17,6)
x_k(37,4,17,6)
x_k <- function(x_k1, a,b,m){
val <- ( (a + (b * x_k1)) %% (2^m-1))
print(paste("x_k =", val, "u_k =", u_k(val, m)))
}
u_k <- function(xk, m) {
return (xk / 2^m)
}
x_k(28,4,17,6)
x_k(39,4,17,6)
n <- 2
CDF <- c(.3, .9, .9, 1)
U <- 0.5
X <- 1
for (x in 0:2) {
X[U > CDF[x+1]] <- x + 1
}
X
setwd("~/eclipse-workspace/DATA405/a2")
